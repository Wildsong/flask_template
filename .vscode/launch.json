{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Python: Hello World App",
            "type": "python",
            "request": "launch",
            "module": "flask",
            "env": {
                "PYTHONDONTWRITEBYTECODE": "1",
                "FLASK_APP": "hello",
            },
            "args": [
                "run"
            ],
            "console": "internalConsole",
            // Launch a browser and hand it our URL after flask starts.
            // This works even on remote connections because vscode forwards ports!
            "serverReadyAction": {
                "pattern": "Running on (https?://[0-9]+[.][0-9]+[.][0-9]+[.][0-9]+:[0-9]+)",
                "uriFormat": "%s",
                "action":"openExternally"
            }
        },
        {
            "name": "Python: Simple Flask App",
            "type": "python",
            "request": "launch",
            "module": "flask",
            "env": {
                "PYTHONDONTWRITEBYTECODE": "1",
                "FLASK_APP": "start_simple_app",
            },
            "args": [
                "run",
                //"--cert=adhoc", // use this if you want to test HTTPS
            ],
            "jinja": true,
            "console": "internalConsole",
            // Launch a browser and hand it our URL after flask starts.
            // This works even on remote connections because vscode forwards ports!
            "serverReadyAction": {
                "pattern": "Running on (https?://[0-9]+[.][0-9]+[.][0-9]+[.][0-9]+:[0-9]+)",
                "uriFormat": "%s",
                "action":"openExternally"
            }
        },
        {
            "name": "Python: Celery Flask App",
            "type": "python",
            "request": "launch",
            "module": "flask",
            "env": {
                "PYTHONDONTWRITEBYTECODE": "1",
                "FLASK_APP": "start_celery_app",
            },
            "args": [
                "run",
                //"--cert=adhoc", // use this if you want to test HTTPS
            ],
            "jinja": true,
            "console": "internalConsole",
            // Launch a browser and hand it our URL after flask starts.
            // This works even on remote connections because vscode forwards ports!
            "serverReadyAction": {
                "pattern": "Running on (https?://[0-9]+[.][0-9]+[.][0-9]+[.][0-9]+:[0-9]+)",
                "uriFormat": "%s",
                "action":"openExternally"
            }
        },
        {
            "name": "Python: Celery Worker",
            "type": "python",
            "request": "launch",
            "module": "celery",
            "envFile": "${workspaceFolder}/.flaskenv",
            "env": {
                "PYTHONDONTWRITEBYTECODE": "1",
            },
            "args": [

            ],
            "console": "internalConsole",
        },
        {
            "name": "Python: Current File",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "envFile": "${workspaceFolder}/.env",
            "console": "internalConsole"
        }
   ],
   "compounds": [
       { 
           "name": "Celery App and Worker", 
           "configurations": ["Python: Celery Flask App", "Python: Celery Worker"]
       }
   ]
}
